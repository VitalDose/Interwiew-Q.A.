Junior

 

Теория тестирования

1. Что такое тестирование?

2. Зачем тестировать ПО?

3. Какие существуют этапы тестирования?

4. Какие типы тестирования можете назвать?

5. Какие уровни тестирования знаете?

6. Какие техники тест-дизайна знаете?

7. Что такое техника анализа классов эквивалентности?

8. Что такое техника анализа предельных значений? В чем ценность этой техники?

9. Что такое Regression и Confirmation тестирование, какая между ними разница?

10. Как часто следует проводить регрессионное тестирование продукта?

11. Какие бывают виды интеграционного тестирования?

12. Что такое Configuration Testing?

13. Что такое Exploratory Testing?

14. Какие существуют UI-стандарты?

15. Что такое Black/Grey/White Box Testing?

16. Что такое Performance Testing?

17. Что такое Smoke и Sanity тестирование и какая между ними разница?

18. Что такое Traceability Matrix?

19. Что такое Sanity Testing?

20. Что такое End-to-End тест?

21. Что такое тестирование безопасности?

22. Что такое испытание на основе рисков?

23. Что такое динамическое тестирование?

24. Что такое «парадокс пестицида»?

25. Опишите основные фазы STLC? Дайте определение Entry и Exit Criteria.

26. Что такое Bug, Error, Failure, Fault?

27. Какие есть атрибуты баг-репорта? Какие основные поля для заполнения?

28. Какова разница между приоритетом и серьезностью?

29. Приведите примеры серьезного, но не приоритетного бага.

30. В чем разница между валидацией и верификацией?

31. Зачем нужна тестовая документация? Какие её виды?

32. Что такое тест-план? Какие элементы у него есть?

33. Какую обязательную информацию должен содержать тест-план? Как правильно его использовать, поддерживать и нужен ли он вообще для большинства проектов?

34. Какая разница между чеклистом и тест-кейсами?

35. Приведите пример хорошего тест-кейса.

Git

67. Для чего используют системы контроля версий?

68. Что такое Git? Каков принцип его работы?

69. Что такое commits, branches в Git?

70. Для чего нужны GitHub, GitLab и другие, базирующиеся на Git, вебхостинги проектов?

Web

76. Что такое клиент-серверная архитектура?

77. Что может выступать в роли клиента?

78. Что такое REST API, SOAP? В чем разница?

79. Какие протоколы передачи данных знаете?

80. Какие способы взаимодействия с API существуют? В чем разница между ними?

81. Как можно протестировать API, что там нужно проверять?

82. Как расшифровывается CRUD?

83. Чем отличается GET от POST?

84. Какие отличия между XML и JSON?

85. Какие знаете форматы передачи данных?

86. Как происходит шифрование?

87. Какие бывают виды баз данных?

88. Охарактеризуйте каждый класс status code (1хх; 2xx; 3xx; 4xx; 5xx).

89. Какие есть HTTP-методы?

90. Какие знаете Web elements?

91. Какие браузеры знаете? В чем их отличие?

92. Для чего необходимы инструменты разработчика в браузере (Chrome DevTools) и как они помогают в тестировании.

93. Что такое кэш?

94. Что такое сессия?

95. Зачем нужны cookies?

96. Что такое фрейм?

97. Что такое HTML/CSS/JavaScript?

98. Какую структуру имеет веб-страница?

99. Зачем чистить кэш?

100. Какие виды тестирования можно применить только к Web?

101. Для чего в веб-страницах используют JavaScript?

102. Что такое REST?

103. Что такое AJAX?

Mobile

104. Какие мобильные платформы существуют?

105. Какие версии Android и iOS используются на рынке (минимальные и максимальные)?

106. Какие версии Android нужно тестировать, если заказчик сказал поддерживать с версии 5.0?

107. Назовите типы мобильных приложений.

108. Каков формат файлов сборок приложений для Android и iOS?

109. Что такое ADB?

110. Как снять логи с AOS/IOS?

111. Что нужно проверять при использовании сканера отпечатка/Face ID?

112. Как я могу запускать тесты Android без Appium?

113. Объясните концепцию дизайна Appium.
